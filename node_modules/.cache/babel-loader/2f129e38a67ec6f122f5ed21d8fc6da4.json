{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport axios from 'axios';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      images: [],\n      titles: [],\n      movieID: [],\n      original_title: movies.cast[i].original_title,\n      tagline: movies.cast[i].tagline,\n      overview: movies.cast[i].overview,\n      homepage: movies.cast[i].homepage,\n      poster: movies.cast[i].poster_path,\n      production: movies.cast[i].production_companies,\n      production_countries: movies.cast[i].production_countries,\n      genre: movies.cast[i].genres,\n      release: movies.cast[i].release_date,\n      vote: movies.cast[i].vote_average,\n      runtime: movies.cast[i].runtime,\n      revenue: movies.cast[i].revenue,\n      backdrop: movies.cast[i].backdrop_path\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&sort_by=release_date.desc');\n    this.setState({\n      movies: movies.cast\n    });\n    let movieImageUrls = [];\n    let movieTitles = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = 'https://image.tmdb.org/t/p/w500';\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      movieTitles.push(this.state.movies[i].original_title);\n      this.setState({\n        images: movieImageUrls,\n        titles: movieTitles,\n        movieID: movies.cast[i].id,\n        original_title: movies.cast[i].original_title,\n        tagline: movies.cast[i].tagline,\n        overview: movies.cast[i].overview,\n        homepage: movies.cast[i].homepage,\n        poster: movies.cast[i].poster_path,\n        production: movies.cast[i].production_companies,\n        production_countries: movies.cast[i].production_countries,\n        genre: movies.cast[i].genres,\n        release: movies.cast[i].release_date,\n        vote: movies.cast[i].vote_average,\n        runtime: movies.cast[i].runtime,\n        revenue: movies.cast[i].revenue,\n        backdrop: movies.cast[i].backdrop_path\n      });\n    }\n\n    console.log(this.state);\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    let {\n      movieTitleToDisplay\n    } = this.state.titles;\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, \"Please wait while images load....\"); // #3. Finally, render the `<Carousel />` with the state's images.\n\n    return /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: \"true\",\n      dots: \"false\",\n      showIndicators: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, images.map(image => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: \"Johnny Covers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 8\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, movieTitleToDisplay));\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","CarouselComponent","Component","state","movies","images","titles","movieID","original_title","cast","i","tagline","overview","homepage","poster","poster_path","production","production_companies","production_countries","genre","genres","release","release_date","vote","vote_average","runtime","revenue","backdrop","backdrop_path","componentDidMount","data","get","process","env","REACT_APP_API_KEY","setState","movieImageUrls","movieTitles","trendingMoviesCount","length","posterPath","push","id","console","log","render","movieTitleToDisplay","map","image"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport axios from 'axios';\r\n\r\nclass CarouselComponent extends React.Component {\r\n\tstate = {\r\n\t\tmovies: [],\r\n    images: [],\r\n    titles:[],\r\n    movieID:[],\r\n    original_title: movies.cast[i].original_title,\r\n    tagline: movies.cast[i].tagline,\r\n    overview: movies.cast[i].overview,\r\n    homepage:movies.cast[i].homepage,\r\n    poster: movies.cast[i].poster_path,\r\n    production:movies.cast[i].production_companies,\r\n    production_countries: movies.cast[i].production_countries,\r\n    genre:movies.cast[i].genres,\r\n    release: movies.cast[i].release_date,\r\n    vote:movies.cast[i].vote_average,\r\n    runtime: movies.cast[i].runtime,\r\n    revenue: movies.cast[i].revenue,\r\n    backdrop: movies.cast[i].backdrop_path\r\n  };\r\n  \r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { data: movies } = await axios.get(\r\n\t\t\t' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' +\r\n\t\t\t\tprocess.env.REACT_APP_API_KEY +\r\n\t\t\t\t'&sort_by=release_date.desc'\r\n\t\t);\r\n\t\tthis.setState({ movies: movies.cast });\r\n\r\n    let movieImageUrls = [];\r\n    let movieTitles = []\r\n\t\tlet trendingMoviesCount = this.state.movies.length;\r\n\t\tfor (let i = 0; i < trendingMoviesCount; i++) {\r\n\t\t\tconst posterPath = 'https://image.tmdb.org/t/p/w500';\r\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\r\n      movieTitles.push(this.state.movies[i].original_title)\r\n      this.setState({ \r\n        images: movieImageUrls,\r\n        titles: movieTitles,\r\n        movieID: movies.cast[i].id,\r\n        original_title: movies.cast[i].original_title,\r\n        tagline: movies.cast[i].tagline,\r\n        overview: movies.cast[i].overview,\r\n        homepage:movies.cast[i].homepage,\r\n        poster: movies.cast[i].poster_path,\r\n        production:movies.cast[i].production_companies,\r\n        production_countries: movies.cast[i].production_countries,\r\n        genre:movies.cast[i].genres,\r\n        release: movies.cast[i].release_date,\r\n        vote:movies.cast[i].vote_average,\r\n        runtime: movies.cast[i].runtime,\r\n        revenue: movies.cast[i].revenue,\r\n        backdrop: movies.cast[i].backdrop_path\r\n       });\r\n\r\n     \r\n\t\t}  console.log(this.state)\r\n\t\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n    const { images } = this.state;\r\n    let {movieTitleToDisplay} = this.state.titles\r\n\r\n\t\tif (!images) return <div>Please wait while images load....</div>;\r\n    \r\n\t\t// #3. Finally, render the `<Carousel />` with the state's images.\r\n\t\treturn (\r\n\t\t\t<Carousel autoPlay infiniteLoop=\"true\" dots=\"false\" showIndicators={false}>\r\n\t\t\t\t{images.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={image} alt=\"Johnny Covers\" />\r\n          \r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n        <p>{movieTitleToDisplay}</p>\r\n\t\t\t</Carousel>\r\n      \r\n\t\t);\r\n\t}\r\n}\r\nexport default CarouselComponent;\r\n"]},"metadata":{},"sourceType":"module"}