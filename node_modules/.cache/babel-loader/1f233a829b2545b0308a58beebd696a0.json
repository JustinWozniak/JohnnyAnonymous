{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport axios from 'axios';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      images: [],\n      titles: [],\n      movieID: [],\n      original_title: [],\n      tagline: [],\n      overview: [],\n      homepage: [],\n      poster: [],\n      production: [],\n      production_countries: [],\n      genre: [],\n      release: [],\n      vote: [],\n      runtime: [],\n      revenue: [],\n      backdrop: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&sort_by=release_date.desc');\n    this.setState({\n      movies: movies.cast\n    });\n    let movieImageUrls = [];\n    let movieTitles = [],\n        images = [],\n        titles = [],\n        movieID = [],\n        original_title = [],\n        tagline = [],\n        overview = [],\n        homepage = [],\n        poster = [],\n        production = [],\n        production_countries = [],\n        genre = [],\n        release = [],\n        vote = [],\n        runtime = [],\n        revenue = [],\n        backdrop = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = 'https://image.tmdb.org/t/p/w500';\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      movieTitles.push(this.state.movies[i].original_title);\n      this.setState({\n        images: movieImageUrls,\n        titles: movieTitles,\n        movieID: movies.cast[i].id,\n        original_title: movies.cast[i].original_title,\n        tagline: movies.cast[i].tagline,\n        overview: movies.cast[i].overview,\n        homepage: movies.cast[i].homepage,\n        poster: movies.cast[i].poster_path,\n        production: movies.cast[i].production_companies,\n        production_countries: movies.cast[i].production_countries,\n        genre: movies.cast[i].genres,\n        release: movies.cast[i].release_date,\n        vote: movies.cast[i].vote_average,\n        runtime: movies.cast[i].runtime,\n        revenue: movies.cast[i].revenue,\n        backdrop: movies.cast[i].backdrop_path\n      });\n    }\n\n    console.log(this.state);\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    let {\n      movieTitleToDisplay\n    } = this.state.titles;\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, \"Please wait while images load....\"); // #3. Finally, render the `<Carousel />` with the state's images.\n\n    return /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: \"true\",\n      dots: \"false\",\n      showIndicators: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 4\n      }\n    }, images.map(image => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: \"Johnny Covers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, movieTitleToDisplay));\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","CarouselComponent","Component","state","movies","images","titles","movieID","original_title","tagline","overview","homepage","poster","production","production_countries","genre","release","vote","runtime","revenue","backdrop","componentDidMount","data","get","process","env","REACT_APP_API_KEY","setState","cast","movieImageUrls","movieTitles","trendingMoviesCount","length","i","posterPath","push","poster_path","id","production_companies","genres","release_date","vote_average","backdrop_path","console","log","render","movieTitleToDisplay","map","image"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport axios from 'axios';\r\n\r\nclass CarouselComponent extends React.Component {\r\n\tstate = {\r\n\t\tmovies: [],\r\n    images: [],\r\n    titles:[],\r\n    movieID:[],\r\n    original_title:[],\r\n    tagline:[],\r\n    overview:[],\r\n    homepage:[],\r\n    poster:[],\r\n    production:[],\r\n    production_countries:[],\r\n    genre:[],\r\n    release:[],\r\n    vote:[],\r\n    runtime:[],\r\n    revenue:[],\r\n    backdrop:[]\r\n  }\r\n  \r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { data: movies } = await axios.get(\r\n\t\t\t' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' +\r\n\t\t\t\tprocess.env.REACT_APP_API_KEY +\r\n\t\t\t\t'&sort_by=release_date.desc'\r\n\t\t);\r\n\t\tthis.setState({ movies: movies.cast });\r\n\r\n    let movieImageUrls = [];\r\n    let movieTitles = [],\r\n    \r\n    images= [],\r\n    titles=[],\r\n    movieID=[],\r\n    original_title=[],\r\n    tagline=[],\r\n    overview=[],\r\n    homepage=[],\r\n    poster=[],\r\n    production=[],\r\n    production_countries=[],\r\n    genre=[],\r\n    release=[],\r\n    vote=[],\r\n    runtime=[],\r\n    revenue=[],\r\n    backdrop=[]\r\n\t\tlet trendingMoviesCount = this.state.movies.length;\r\n\t\tfor (let i = 0; i < trendingMoviesCount; i++) {\r\n\t\t\tconst posterPath = 'https://image.tmdb.org/t/p/w500';\r\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\r\n      movieTitles.push(this.state.movies[i].original_title)\r\n      this.setState({ \r\n        images: movieImageUrls,\r\n        titles: movieTitles,\r\n        movieID: movies.cast[i].id,\r\n        original_title: movies.cast[i].original_title,\r\n        tagline: movies.cast[i].tagline,\r\n        overview: movies.cast[i].overview,\r\n        homepage:movies.cast[i].homepage,\r\n        poster: movies.cast[i].poster_path,\r\n        production:movies.cast[i].production_companies,\r\n        production_countries: movies.cast[i].production_countries,\r\n        genre:movies.cast[i].genres,\r\n        release: movies.cast[i].release_date,\r\n        vote:movies.cast[i].vote_average,\r\n        runtime: movies.cast[i].runtime,\r\n        revenue: movies.cast[i].revenue,\r\n        backdrop: movies.cast[i].backdrop_path\r\n       });\r\n\r\n     \r\n\t\t}  console.log(this.state)\r\n\t\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n    const { images } = this.state;\r\n    let {movieTitleToDisplay} = this.state.titles\r\n\r\n\t\tif (!images) return <div>Please wait while images load....</div>;\r\n    \r\n\t\t// #3. Finally, render the `<Carousel />` with the state's images.\r\n\t\treturn (\r\n\t\t\t<Carousel autoPlay infiniteLoop=\"true\" dots=\"false\" showIndicators={false}>\r\n\t\t\t\t{images.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={image} alt=\"Johnny Covers\" />\r\n          \r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n        <p>{movieTitleToDisplay}</p>\r\n\t\t\t</Carousel>\r\n      \r\n\t\t);\r\n\t}\r\n}\r\nexport default CarouselComponent;\r\n"]},"metadata":{},"sourceType":"module"}