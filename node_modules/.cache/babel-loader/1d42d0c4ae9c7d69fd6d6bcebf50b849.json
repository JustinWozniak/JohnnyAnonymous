{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport axios from 'axios';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      images: [],\n      titles: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&sort_by=release_date.desc');\n    this.setState({\n      movies: movies.cast\n    });\n    console.log(this.state.movies);\n    let movieImageUrls = [];\n    let movieTitles = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = 'https://image.tmdb.org/t/p/w500';\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      movieTitles.push(this.state.movies[i].original_title);\n      this.setState({\n        images: movieImageUrls,\n        titles: movieTitles,\n        movieID: data.id,\n        original_title: data.original_title,\n        tagline: data.tagline,\n        overview: data.overview,\n        homepage: data.homepage,\n        poster: data.poster_path,\n        production: data.production_companies,\n        production_countries: data.production_countries,\n        genre: data.genres,\n        release: data.release_date,\n        vote: data.vote_average,\n        runtime: data.runtime,\n        revenue: data.revenue,\n        backdrop: data.backdrop_path\n      });\n    }\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    let {\n      movieTitleToDisplay\n    } = this.state.titles;\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, \"Please wait while images load....\"); // #3. Finally, render the `<Carousel />` with the state's images.\n\n    return /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: \"true\",\n      dots: \"false\",\n      showIndicators: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, images.map(image => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: \"Johnny Covers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 8\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, movieTitleToDisplay));\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","CarouselComponent","Component","state","movies","images","titles","componentDidMount","data","get","process","env","REACT_APP_API_KEY","setState","cast","console","log","movieImageUrls","movieTitles","trendingMoviesCount","length","i","posterPath","push","poster_path","original_title","movieID","id","tagline","overview","homepage","poster","production","production_companies","production_countries","genre","genres","release","release_date","vote","vote_average","runtime","revenue","backdrop","backdrop_path","render","movieTitleToDisplay","map","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACPC,MAAAA,MAAM,EAAE,EADD;AAELC,MAAAA,MAAM,EAAE,EAFH;AAGLC,MAAAA,MAAM,EAAC;AAHF,KADuC;AAAA;;AAQ/C,QAAMC,iBAAN,GAA0B;AACzB,UAAM;AAAEC,MAAAA,IAAI,EAAEJ;AAAR,QAAmB,MAAMJ,KAAK,CAACS,GAAN,CAC9B,mEACCC,OAAO,CAACC,GAAR,CAAYC,iBADb,GAEC,4BAH6B,CAA/B;AAKA,SAAKC,QAAL,CAAc;AAAET,MAAAA,MAAM,EAAEA,MAAM,CAACU;AAAjB,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,MAAvB;AACE,QAAIa,cAAc,GAAG,EAArB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACF,QAAIC,mBAAmB,GAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAA5C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,mBAApB,EAAyCE,CAAC,EAA1C,EAA8C;AAC7C,YAAMC,UAAU,GAAG,iCAAnB;AACGL,MAAAA,cAAc,CAACM,IAAf,CAAoBD,UAAU,GAAGlB,MAAM,CAACU,IAAP,CAAYO,CAAZ,EAAeG,WAAhD;AACAN,MAAAA,WAAW,CAACK,IAAZ,CAAiB,KAAKpB,KAAL,CAAWC,MAAX,CAAkBiB,CAAlB,EAAqBI,cAAtC;AACA,WAAKZ,QAAL,CAAc;AACZR,QAAAA,MAAM,EAAEY,cADI;AAEZX,QAAAA,MAAM,EAAEY,WAFI;AAGZQ,QAAAA,OAAO,EAAElB,IAAI,CAACmB,EAHF;AAIZF,QAAAA,cAAc,EAAEjB,IAAI,CAACiB,cAJT;AAKZG,QAAAA,OAAO,EAAEpB,IAAI,CAACoB,OALF;AAMZC,QAAAA,QAAQ,EAAErB,IAAI,CAACqB,QANH;AAOZC,QAAAA,QAAQ,EAAEtB,IAAI,CAACsB,QAPH;AAQZC,QAAAA,MAAM,EAAEvB,IAAI,CAACgB,WARD;AASZQ,QAAAA,UAAU,EAAExB,IAAI,CAACyB,oBATL;AAUZC,QAAAA,oBAAoB,EAAE1B,IAAI,CAAC0B,oBAVf;AAWZC,QAAAA,KAAK,EAAE3B,IAAI,CAAC4B,MAXA;AAYZC,QAAAA,OAAO,EAAE7B,IAAI,CAAC8B,YAZF;AAaZC,QAAAA,IAAI,EAAE/B,IAAI,CAACgC,YAbC;AAcZC,QAAAA,OAAO,EAAEjC,IAAI,CAACiC,OAdF;AAeZC,QAAAA,OAAO,EAAElC,IAAI,CAACkC,OAfF;AAgBZC,QAAAA,QAAQ,EAAEnC,IAAI,CAACoC;AAhBH,OAAd;AAoBH;AAED;;AAIDC,EAAAA,MAAM,GAAG;AACN,UAAM;AAAExC,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,QAAI;AAAC2C,MAAAA;AAAD,QAAwB,KAAK3C,KAAL,CAAWG,MAAvC;AAEF,QAAI,CAACD,MAAL,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAP,CAJL,CAMR;;AACA,wBACC,oBAAC,QAAD;AAAU,MAAA,QAAQ,MAAlB;AAAmB,MAAA,YAAY,EAAC,MAAhC;AAAuC,MAAA,IAAI,EAAC,OAA5C;AAAoD,MAAA,cAAc,EAAE,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEA,MAAM,CAAC0C,GAAP,CAAYC,KAAD,IAAW;AACtB,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,GAAG,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAOA,KARA,CADF,eAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,mBAAJ,CAVL,CADD;AAeA;;AAvE8C;;AAyEhD,eAAe7C,iBAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport axios from 'axios';\r\n\r\nclass CarouselComponent extends React.Component {\r\n\tstate = {\r\n\t\tmovies: [],\r\n    images: [],\r\n    titles:[]\r\n  };\r\n  \r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { data: movies } = await axios.get(\r\n\t\t\t' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' +\r\n\t\t\t\tprocess.env.REACT_APP_API_KEY +\r\n\t\t\t\t'&sort_by=release_date.desc'\r\n\t\t);\r\n\t\tthis.setState({ movies: movies.cast });\r\n\t\tconsole.log(this.state.movies)\r\n    let movieImageUrls = [];\r\n    let movieTitles = []\r\n\t\tlet trendingMoviesCount = this.state.movies.length;\r\n\t\tfor (let i = 0; i < trendingMoviesCount; i++) {\r\n\t\t\tconst posterPath = 'https://image.tmdb.org/t/p/w500';\r\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\r\n      movieTitles.push(this.state.movies[i].original_title)\r\n      this.setState({ \r\n        images: movieImageUrls,\r\n        titles: movieTitles,\r\n        movieID: data.id,\r\n        original_title: data.original_title,\r\n        tagline: data.tagline,\r\n        overview: data.overview,\r\n        homepage: data.homepage,\r\n        poster: data.poster_path,\r\n        production: data.production_companies,\r\n        production_countries: data.production_countries,\r\n        genre: data.genres,\r\n        release: data.release_date,\r\n        vote: data.vote_average,\r\n        runtime: data.runtime,\r\n        revenue: data.revenue,\r\n        backdrop: data.backdrop_path\r\n       });\r\n  \r\n     \r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n    const { images } = this.state;\r\n    let {movieTitleToDisplay} = this.state.titles\r\n\r\n\t\tif (!images) return <div>Please wait while images load....</div>;\r\n    \r\n\t\t// #3. Finally, render the `<Carousel />` with the state's images.\r\n\t\treturn (\r\n\t\t\t<Carousel autoPlay infiniteLoop=\"true\" dots=\"false\" showIndicators={false}>\r\n\t\t\t\t{images.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={image} alt=\"Johnny Covers\" />\r\n          \r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n        <p>{movieTitleToDisplay}</p>\r\n\t\t\t</Carousel>\r\n      \r\n\t\t);\r\n\t}\r\n}\r\nexport default CarouselComponent;\r\n"]},"metadata":{},"sourceType":"module"}