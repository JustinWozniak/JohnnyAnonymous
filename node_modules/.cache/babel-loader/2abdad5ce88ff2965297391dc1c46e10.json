{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from \"react-responsive-carousel\";\nimport axios from 'axios';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      images: null\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&language=en-US');\n    this.setState({\n      movies: movies.cast\n    });\n    let movieImageUrls = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = \"https://image.tmdb.org/t/p/w500/\";\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      this.setState({\n        movies: movieImageUrls\n      });\n    }\n  }\n\n  render() {\n    const {\n      images\n    } = this.state.movies;\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }\n    }, \"Images are not fetched yet!\"); // #3. Finally, render the `<Carousel />` with the state's images.\n    // return <Carousel autoPlay infiniteLoop='true'>\n    //   {\n    //     images.map( image => {\n    //       return <div>\n    //         <img src={`${posterPath} ${this.state.movies}` } />\n    //         <p className=\"legend\">{ image.name }</p>\n    //       </div>\n    //     })\n    //   }\n    // </Carousel>\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","CarouselComponent","Component","state","movies","images","componentDidMount","data","get","process","env","REACT_APP_API_KEY","setState","cast","movieImageUrls","trendingMoviesCount","length","i","posterPath","push","poster_path","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,iBAAN,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAC9CC,KAD8C,GACtC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsC;AAAA;;AAM9C,QAAMC,iBAAN,GAA0B;AACxB,UAAM;AAAEC,MAAAA,IAAI,EAAEH;AAAR,QAAmB,MAAMJ,KAAK,CAACQ,GAAN,CAE7B,mEAAmEC,OAAO,CAACC,GAAR,CAAYC,iBAA/E,GAAmG,iBAFtE,CAA/B;AAIA,SAAKC,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEA,MAAM,CAACS;AAAjB,KAAd;AAEA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,mBAAmB,GAAG,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,MAA5C;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,mBAApB,EAAyCE,CAAC,EAA1C,EAA8C;AAC5C,YAAMC,UAAU,GAAG,kCAAnB;AACAJ,MAAAA,cAAc,CAACK,IAAf,CAAoBD,UAAU,GAAGd,MAAM,CAACS,IAAP,CAAYI,CAAZ,EAAeG,WAAhD;AACA,WAAKR,QAAL,CAAc;AAAER,QAAAA,MAAM,EAACU;AAAT,OAAd;AAED;AACF;;AAEDO,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAAEhB,MAAAA;AAAF,QAAa,KAAKF,KAAL,CAAWC,MAA9B;AAEA,QAAI,CAACC,MAAL,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAP,CAJT,CAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD;;AA1C2C;;AA4C5C,eAAeJ,iBAAf","sourcesContent":["import React from 'react';\n\nimport { Carousel } from \"react-responsive-carousel\";\nimport axios from 'axios';\n\n\nclass CarouselComponent extends React.Component {\n  state = {\n    movies: [],\n    images: null\n  };\n\n  async componentDidMount() {\n    const { data: movies } = await axios.get(\n\n      ' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&language=en-US'\n    );\n    this.setState({ movies: movies.cast });\n   \n    let movieImageUrls = []\n    let trendingMoviesCount = this.state.movies.length\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = \"https://image.tmdb.org/t/p/w500/\"\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      this.setState({ movies:movieImageUrls });\n   \n    }  \n  }\n\n  render(){\n  \n      const { images } = this.state.movies\n    \n      if (!images) return <div>Images are not fetched yet!</div>\n\n      // #3. Finally, render the `<Carousel />` with the state's images.\n      // return <Carousel autoPlay infiniteLoop='true'>\n      //   {\n      //     images.map( image => {\n      //       return <div>\n      //         <img src={`${posterPath} ${this.state.movies}` } />\n      //         <p className=\"legend\">{ image.name }</p>\n      //       </div>\n      //     })\n      //   }\n      // </Carousel>\n\n    \n    }\n}\n    export default CarouselComponent\n\n\n\n"]},"metadata":{},"sourceType":"module"}