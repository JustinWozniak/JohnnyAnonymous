{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport axios from 'axios';\nimport Moment from 'moment';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&sort_by=release_date.desc');\n    this.setState({\n      movies: movies.cast\n    });\n    let movieImageUrls = [];\n    let movieTitles = [];\n    let johnnyCharacter = [];\n    let original_title = [];\n    let overview = [];\n    let popularity = [];\n    let release_date = [];\n    let title = [];\n    let vote_average = [];\n    let movies_id = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = 'https://image.tmdb.org/t/p/w500';\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      movieTitles.push(this.state.movies[i].original_title);\n      johnnyCharacter.push(movies.cast[i].character);\n      original_title.push(movies.cast[i].original_title);\n      overview.push(movies.cast[i].overview);\n      popularity.push(movies.cast[i].popularity);\n      release_date.push(movies.cast[i].release_date);\n      title.push(movies.cast[i].title);\n      vote_average.push(movies.cast[i].vote_average);\n      movies_id.push(movies.cast[i].id);\n      this.setState({\n        images: movieImageUrls,\n        originaltitle: original_title,\n        overviews: overview,\n        popularitys: popularity,\n        releasedates: release_date,\n        titles: title,\n        voteaverages: vote_average,\n        moviesId: movies_id\n      });\n    } //end of loop\n\n\n    this.fetchMoviesData(58);\n  }\n\n  fetchMoviesData(moviesIdtoFetch) {\n    fetch(`https://api.themoviedb.org/3/movie/${moviesIdtoFetch}?api_key=abb02fcc5fa2b30465f423cf48076a7e&language=en-US`).then(response => response.json()).then(data => this.setState({\n      budget: data.budget,\n      genres: data.genres,\n      belongs_to_collection: data.belongs_to_collection,\n      homepage: data.homepage,\n      original_language: data.original_language,\n      production_companies: data.production_companies,\n      revenue: data.revenue,\n      runtime: data.runtime,\n      status: data.status,\n      tagline: data.tagline\n    }));\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    let originaltitle = this.state.titles;\n    let moviesoverview = this.state.overviews;\n    let datereleased = this.state.releasedates;\n    let fanPopularity = this.state.popularitys;\n    let {\n      budget\n    } = this.state.budget;\n    let {\n      genres\n    } = this.state.genres;\n    let {\n      belongs_to_collection\n    } = this.state.belongs_to_collection;\n    let {\n      homepage\n    } = this.state.homepage;\n    let {\n      original_language\n    } = this.state.original_language;\n    let {\n      production_companies\n    } = this.state.production_companies;\n    let {\n      revenue\n    } = this.state.revenue;\n    let {\n      runtime\n    } = this.state.revenue;\n    let {\n      status\n    } = this.state.status;\n    let {\n      tagline\n    } = this.state.status;\n\n    tagline: data.tagline;\n\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }\n    }, \"Please wait while images load....\"); // #3. Finally, render the `<Carousel />` with the state's images.\n\n    return /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: \"true\",\n      dots: \"false\",\n      showIndicators: false,\n      interval: 10000,\n      onChange: this.getMovieDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 4\n      }\n    }, images.map((image, name) => {\n      let formattedDate = Moment(datereleased[name]).format('MMM D YYYY');\n      let movieIdToFetch = this.state.moviesId[name];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: \"Johnny Covers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 8\n        }\n      }, originaltitle[name]), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 8\n        }\n      }, \"Tagline: \", this.state.tagline), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 8\n        }\n      }, moviesoverview[name]), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 8\n        }\n      }, \"Release Date: \", formattedDate), \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, \"Fan Popularity: \", fanPopularity[name]));\n    }));\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","Moment","CarouselComponent","Component","state","componentDidMount","data","movies","get","process","env","REACT_APP_API_KEY","setState","cast","movieImageUrls","movieTitles","johnnyCharacter","original_title","overview","popularity","release_date","title","vote_average","movies_id","trendingMoviesCount","length","i","posterPath","push","poster_path","character","id","images","originaltitle","overviews","popularitys","releasedates","titles","voteaverages","moviesId","fetchMoviesData","moviesIdtoFetch","fetch","then","response","json","budget","genres","belongs_to_collection","homepage","original_language","production_companies","revenue","runtime","status","tagline","render","moviesoverview","datereleased","fanPopularity","getMovieDetails","map","image","name","formattedDate","format","movieIdToFetch"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport axios from 'axios';\r\nimport Moment from 'moment';\r\n\r\nclass CarouselComponent extends React.Component {\r\n\tstate = {};\r\n\r\n\tasync componentDidMount() {\r\n\t\t\r\n\t\tconst { data: movies } = await axios.get(\r\n\t\t\t' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' +\r\n\t\t\t\tprocess.env.REACT_APP_API_KEY +\r\n\t\t\t\t'&sort_by=release_date.desc'\r\n\t\t);\r\n\t\tthis.setState({ movies: movies.cast });\r\n\r\n\t\tlet movieImageUrls = [];\r\n\t\tlet movieTitles = [];\r\n\t\tlet johnnyCharacter = [];\r\n\t\tlet original_title = [];\r\n\t\tlet overview = [];\r\n\t\tlet popularity = [];\r\n\t\tlet release_date = [];\r\n\t\tlet title = [];\r\n\t\tlet vote_average = [];\r\n\t\tlet movies_id = [];\r\n\r\n\t\tlet trendingMoviesCount = this.state.movies.length;\r\n\t\tfor (let i = 0; i < trendingMoviesCount; i++) {\r\n\t\t\tconst posterPath = 'https://image.tmdb.org/t/p/w500';\r\n\r\n\t\t\tmovieImageUrls.push(posterPath + movies.cast[i].poster_path);\r\n\t\t\tmovieTitles.push(this.state.movies[i].original_title);\r\n\t\t\tjohnnyCharacter.push(movies.cast[i].character);\r\n\t\t\toriginal_title.push(movies.cast[i].original_title);\r\n\t\t\toverview.push(movies.cast[i].overview);\r\n\t\t\tpopularity.push(movies.cast[i].popularity);\r\n\t\t\trelease_date.push(movies.cast[i].release_date);\r\n\t\t\ttitle.push(movies.cast[i].title);\r\n\t\t\tvote_average.push(movies.cast[i].vote_average);\r\n\t\t\tmovies_id.push(movies.cast[i].id);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\timages: movieImageUrls,\r\n\t\t\t\toriginaltitle: original_title,\r\n\t\t\t\toverviews: overview,\r\n\t\t\t\tpopularitys: popularity,\r\n\t\t\t\treleasedates: release_date,\r\n\t\t\t\ttitles: title,\r\n\t\t\t\tvoteaverages: vote_average,\r\n\t\t\t\tmoviesId: movies_id\r\n\t\t\t});\r\n\t\t}//end of loop\r\n\tthis.fetchMoviesData(58)\r\n\t\r\n\t}\r\n\r\n\r\n\tfetchMoviesData(moviesIdtoFetch)\t{\r\n\t\tfetch(\r\n\t\t`https://api.themoviedb.org/3/movie/${moviesIdtoFetch}?api_key=abb02fcc5fa2b30465f423cf48076a7e&language=en-US`\r\n\t)\r\n\t\t.then((response) => response.json())\r\n\t\t.then((data) =>\r\n\t\t\tthis.setState({\r\n\t\t\t\tbudget: data.budget,\r\n\t\t\t\tgenres: data.genres,\r\n\t\t\t\tbelongs_to_collection: data.belongs_to_collection,\r\n\t\t\t\thomepage: data.homepage,\r\n\t\t\t\toriginal_language: data.original_language,\r\n\t\t\t\tproduction_companies: data.production_companies,\r\n\t\t\t\trevenue: data.revenue,\r\n\t\t\t\truntime: data.runtime,\r\n\t\t\t\tstatus: data.status,\r\n\t\t\t\ttagline: data.tagline\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { images } = this.state;\r\n\t\tlet originaltitle = this.state.titles;\r\n\t\tlet moviesoverview = this.state.overviews;\r\n\t\tlet datereleased = this.state.releasedates;\r\n\t\tlet fanPopularity = this.state.popularitys;\r\n\r\n\t\tlet {budget} = this.state.budget\r\n\t\tlet {genres} = this.state.genres\r\n\t\tlet {belongs_to_collection} = this.state.belongs_to_collection\r\n\t\tlet {homepage} = this.state.homepage\r\n\t\tlet {original_language} = this.state.original_language\r\n\t\tlet {production_companies} = this.state.production_companies\r\n\t\tlet {revenue} = this.state.revenue\r\n\t\tlet {runtime} = this.state.revenue\r\n\t\tlet {status} = this.state.status\r\n\t\tlet {tagline} = this.state.status\r\n\t\ttagline: data.tagline\r\n\r\n\r\n\r\n\t\tif (!images) return <div>Please wait while images load....</div>;\r\n\r\n\t\t\r\n\r\n\t\t// #3. Finally, render the `<Carousel />` with the state's images.\r\n\t\treturn (\r\n\t\t\t<Carousel\r\n\t\t\t\tautoPlay\r\n\t\t\t\tinfiniteLoop=\"true\"\r\n\t\t\t\tdots=\"false\"\r\n\t\t\t\tshowIndicators={false}\r\n\t\t\t\tinterval={10000}\r\n\t\t\t\tonChange={this.getMovieDetails}\r\n\t\t\t>\r\n\t\t\t\t{images.map((image, name) => {\r\n\t\t\t\t\tlet formattedDate = Moment(datereleased[name]).format('MMM D YYYY');\r\n\t\t\t\t\tlet movieIdToFetch = this.state.moviesId[name];\r\n\t\t\t\t\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={image} alt=\"Johnny Covers\" />\r\n\t\t\t\t\t\t\t<h1>{originaltitle[name]}</h1>\r\n\t\t\t\t\t\t\t<h2>Tagline: {this.state.tagline}</h2>\r\n\t\t\t\t\t\t\t<p>{moviesoverview[name]}</p>\r\n\t\t\t\t\t\t\t<p>Release Date: {formattedDate}</p> <p>Fan Popularity: {fanPopularity[name]}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Carousel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CarouselComponent;\r\n"]},"metadata":{},"sourceType":"module"}