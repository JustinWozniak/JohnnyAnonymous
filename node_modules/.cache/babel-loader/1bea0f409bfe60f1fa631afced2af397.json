{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rocka\\\\Desktop\\\\Programming\\\\React\\\\Johnhy App\\\\src\\\\components\\\\elements\\\\Carousel.js\";\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport axios from 'axios';\nimport Moment from 'moment';\n\nclass CarouselComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const {\n      data: movies\n    } = await axios.get(' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' + process.env.REACT_APP_API_KEY + '&sort_by=release_date.desc');\n    this.setState({\n      movies: movies.cast\n    });\n    let movieImageUrls = [];\n    let movieTitles = [];\n    let johnnyCharacter = [];\n    let original_title = [];\n    let overview = [];\n    let popularity = [];\n    let release_date = [];\n    let title = [];\n    let vote_average = [];\n    let movies_id = [];\n    let trendingMoviesCount = this.state.movies.length;\n\n    for (let i = 0; i < trendingMoviesCount; i++) {\n      const posterPath = 'https://image.tmdb.org/t/p/w500';\n      movieImageUrls.push(posterPath + movies.cast[i].poster_path);\n      movieTitles.push(this.state.movies[i].original_title);\n      johnnyCharacter.push(movies.cast[i].character);\n      original_title.push(movies.cast[i].original_title);\n      overview.push(movies.cast[i].overview);\n      popularity.push(movies.cast[i].popularity);\n      release_date.push(movies.cast[i].release_date);\n      title.push(movies.cast[i].title);\n      vote_average.push(movies.cast[i].vote_average);\n      movies_id.push(movies.cast[i].id);\n      this.setState({\n        images: movieImageUrls,\n        originaltitle: original_title,\n        overviews: overview,\n        popularitys: popularity,\n        releasedates: release_date,\n        titles: title,\n        voteaverages: vote_average,\n        moviesId: movies_id\n      });\n    }\n\n    console.log(this.state);\n  }\n\n  getMovieDetails(moviesId) {\n    console.log(\"here\");\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    let originaltitle = this.state.titles;\n    let moviesoverview = this.state.overviews;\n    let datereleased = this.state.releasedates;\n    let fanPopularity = this.state.popularitys;\n    let movieIdToFetch = this.state.moviesId;\n    console.log(movieIdToFetch);\n    if (!images) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }, \"Please wait while images load....\"); // #3. Finally, render the `<Carousel />` with the state's images.\n\n    return /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: \"true\",\n      dots: \"false\",\n      showIndicators: false,\n      onChange: this.getMovieDetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, images.map((image, name) => {\n      let formattedDate = Moment(datereleased[name]).format('MMM D YYYY');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: \"Johnny Covers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 8\n        }\n      }, originaltitle[name]), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }\n      }, moviesoverview[name]), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 8\n        }\n      }, \"Release Date: \", formattedDate), \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, \"Fan Popularity: \", fanPopularity[name]));\n    }));\n  }\n\n}\n\nexport default CarouselComponent;","map":{"version":3,"sources":["C:/Users/Rocka/Desktop/Programming/React/Johnhy App/src/components/elements/Carousel.js"],"names":["React","Carousel","axios","Moment","CarouselComponent","Component","state","componentDidMount","data","movies","get","process","env","REACT_APP_API_KEY","setState","cast","movieImageUrls","movieTitles","johnnyCharacter","original_title","overview","popularity","release_date","title","vote_average","movies_id","trendingMoviesCount","length","i","posterPath","push","poster_path","character","id","images","originaltitle","overviews","popularitys","releasedates","titles","voteaverages","moviesId","console","log","getMovieDetails","render","moviesoverview","datereleased","fanPopularity","movieIdToFetch","map","image","name","formattedDate","format"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport axios from 'axios';\r\nimport Moment from 'moment';\r\n\r\nclass CarouselComponent extends React.Component {\r\n\tstate = {};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst { data: movies } = await axios.get(\r\n\t\t\t' https://api.themoviedb.org/3/person/85/movie_credits?api_key=' +\r\n\t\t\t\tprocess.env.REACT_APP_API_KEY +\r\n\t\t\t\t'&sort_by=release_date.desc'\r\n\t\t);\r\n\t\tthis.setState({ movies: movies.cast });\r\n\t\t\r\n\t\tlet movieImageUrls = [];\r\n\t\tlet movieTitles = [];\r\n\t\tlet johnnyCharacter = [];\r\n\t\tlet original_title = [];\r\n\t\tlet overview = [];\r\n\t\tlet popularity = [];\r\n\t\tlet release_date = [];\r\n\t\tlet title = [];\r\n\t\tlet vote_average = [];\r\n\t\tlet movies_id = [];\r\n\r\n\t\tlet trendingMoviesCount = this.state.movies.length;\r\n\t\tfor (let i = 0; i < trendingMoviesCount; i++) {\r\n\t\t\tconst posterPath = 'https://image.tmdb.org/t/p/w500';\r\n\r\n\t\t\tmovieImageUrls.push(posterPath + movies.cast[i].poster_path);\r\n\t\t\tmovieTitles.push(this.state.movies[i].original_title);\r\n\t\t\tjohnnyCharacter.push(movies.cast[i].character);\r\n\t\t\toriginal_title.push(movies.cast[i].original_title);\r\n\t\t\toverview.push(movies.cast[i].overview);\r\n\t\t\tpopularity.push(movies.cast[i].popularity);\r\n\t\t\trelease_date.push(movies.cast[i].release_date);\r\n\t\t\ttitle.push(movies.cast[i].title);\r\n\t\t\tvote_average.push(movies.cast[i].vote_average);\r\n\t\t\tmovies_id.push(movies.cast[i].id);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\timages: movieImageUrls,\r\n\t\t\t\toriginaltitle: original_title,\r\n\t\t\t\toverviews: overview,\r\n\t\t\t\tpopularitys: popularity,\r\n\t\t\t\treleasedates: release_date,\r\n\t\t\t\ttitles: title,\r\n\t\t\t\tvoteaverages: vote_average,\r\n\t\t\t\tmoviesId: movies_id\r\n\t\t\t});\r\n\t\t}\tconsole.log(this.state)\r\n\t}\r\n\tgetMovieDetails(moviesId)\t{\r\n\t\tconsole.log(\"here\")\r\n\t}\r\n\trender() {\r\n\t\tconst { images } = this.state;\r\n\t\tlet originaltitle = this.state.titles;\r\n\t\tlet moviesoverview = this.state.overviews;\r\n\t\tlet datereleased = this.state.releasedates;\r\n\t\tlet fanPopularity = this.state.popularitys;\r\n\t\tlet movieIdToFetch = this.state.moviesId;\r\n\t\tconsole.log(movieIdToFetch)\r\n\t\r\n\r\n\t\tif (!images) return <div>Please wait while images load....</div>;\r\n\r\n\t\t// #3. Finally, render the `<Carousel />` with the state's images.\r\n\t\treturn (\r\n\t\t\t<Carousel autoPlay \r\n\t\t\tinfiniteLoop=\"true\" \r\n\t\t\tdots=\"false\" \r\n\t\t\tshowIndicators={false}\r\n\t\t\tonChange={this.getMovieDetails}\r\n\t\t\t>\r\n\t\t\t\t{images.map((image, name) => {\r\n\t\t\t\t\tlet formattedDate = Moment(datereleased[name]).format('MMM D YYYY');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={image} alt=\"Johnny Covers\" />\r\n\t\t\t\t\t\t\t<h1>{originaltitle[name]}</h1>\r\n\t\t\t\t\t\t\t<p>{moviesoverview[name]}</p>\r\n\t\t\t\t\t\t\t<p>Release Date: {formattedDate}</p> <p>Fan Popularity: {fanPopularity[name]}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Carousel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CarouselComponent;\r\n"]},"metadata":{},"sourceType":"module"}